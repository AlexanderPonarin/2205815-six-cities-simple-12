{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { cityChanger, offersChangerByCity, activeSortOption, loadOffers, requireAuthorization } from './action';\nimport offers from '../mocks/offers';\nimport { CITIES, SORT_OPTIONS, AuthorizationStatus } from '../const';\nconst initialState = {\n  cities: CITIES,\n  city: CITIES[0],\n  offers: offers,\n  activeSortOption: 'Popular',\n  sortOptions: SORT_OPTIONS,\n  authorizationStatus: AuthorizationStatus.Unknown\n};\nconst reducer = createReducer(initialState, builder => {\n  builder.addCase(cityChanger, (state, action) => {\n    state.city = action.payload.city;\n  });\n  builder.addCase(offersChangerByCity, state => {\n    state.offers = initialState.offers.filter(offer => offer.city.name === state.city);\n  });\n  builder.addCase(activeSortOption, (state, action) => {\n    state.activeSortOption = action.payload.option;\n    switch (action.payload.option) {\n      case 'Popular':\n        state.offers = state.offers = initialState.offers.filter(offer => offer.city.name === state.city);\n        break;\n      case 'Price: low to high':\n        state.offers.sort((a, b) => a.price - b.price);\n        break;\n      case 'Price: high to low':\n        state.offers.sort((a, b) => b.price - a.price);\n        break;\n      case 'Top rated first':\n        state.offers.sort((a, b) => b.rating - a.rating);\n        break;\n    }\n  });\n  builder.addCase(loadOffers, (state, action) => {\n    state.offers = action.payload;\n  });\n  builder.addCase(requireAuthorization, (state, action) => {\n    state.authorizationStatus = action.payload;\n  });\n});\nexport { reducer };","map":{"version":3,"names":["createReducer","cityChanger","offersChangerByCity","activeSortOption","loadOffers","requireAuthorization","offers","CITIES","SORT_OPTIONS","AuthorizationStatus","initialState","cities","city","sortOptions","authorizationStatus","Unknown","reducer","builder","addCase","state","action","payload","filter","offer","name","option","sort","a","b","price","rating"],"sources":["C:/Users/Cody/Documents/GitHub/2205815-six-cities-simple-12/project/src/store/reducer.ts"],"sourcesContent":["import {createReducer} from '@reduxjs/toolkit';\r\nimport { cityChanger, offersChangerByCity, activeSortOption, loadOffers, requireAuthorization, } from './action';\r\nimport offers from '../mocks/offers';\r\nimport { CITIES, SORT_OPTIONS, AuthorizationStatus } from '../const';\r\n\r\n\r\nconst initialState = {\r\n  cities: CITIES,\r\n  city: CITIES[0],\r\n  offers: offers,\r\n  activeSortOption: 'Popular',\r\n  sortOptions: SORT_OPTIONS,\r\n  authorizationStatus: AuthorizationStatus.Unknown,\r\n};\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(cityChanger, (state, action) => {\r\n      state.city = action.payload.city;\r\n    });\r\n  builder\r\n    .addCase(offersChangerByCity, (state) => {\r\n      state.offers = initialState.offers.filter((offer) => offer.city.name === state.city);\r\n    });\r\n  builder\r\n    .addCase(activeSortOption, (state, action) => {\r\n      state.activeSortOption = action.payload.option;\r\n      switch(action.payload.option) {\r\n        case 'Popular':\r\n          state.offers = state.offers = initialState.offers.filter((offer) => offer.city.name === state.city);\r\n          break;\r\n        case 'Price: low to high':\r\n          state.offers.sort((a,b) => a.price - b.price);\r\n          break;\r\n        case 'Price: high to low':\r\n          state.offers.sort((a,b) => b.price - a.price);\r\n          break;\r\n        case 'Top rated first':\r\n          state.offers.sort((a,b) => b.rating - a.rating);\r\n          break;\r\n      }\r\n    });\r\n  builder\r\n    .addCase(loadOffers, (state, action) => {\r\n      state.offers = action.payload;\r\n    });\r\n  builder\r\n    .addCase(requireAuthorization, (state, action) => {\r\n      state.authorizationStatus = action.payload;\r\n    });\r\n});\r\n\r\nexport {reducer};\r\n"],"mappings":"AAAA,SAAQA,aAAa,QAAO,kBAAkB;AAC9C,SAASC,WAAW,EAAEC,mBAAmB,EAAEC,gBAAgB,EAAEC,UAAU,EAAEC,oBAAoB,QAAS,UAAU;AAChH,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,MAAM,EAAEC,YAAY,EAAEC,mBAAmB,QAAQ,UAAU;AAGpE,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAEJ,MAAM;EACdK,IAAI,EAAEL,MAAM,CAAC,CAAC,CAAC;EACfD,MAAM,EAAEA,MAAM;EACdH,gBAAgB,EAAE,SAAS;EAC3BU,WAAW,EAAEL,YAAY;EACzBM,mBAAmB,EAAEL,mBAAmB,CAACM;AAC3C,CAAC;AAED,MAAMC,OAAO,GAAGhB,aAAa,CAACU,YAAY,EAAGO,OAAO,IAAK;EACvDA,OAAO,CACJC,OAAO,CAACjB,WAAW,EAAE,CAACkB,KAAK,EAAEC,MAAM,KAAK;IACvCD,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACC,OAAO,CAACT,IAAI;EAClC,CAAC,CAAC;EACJK,OAAO,CACJC,OAAO,CAAChB,mBAAmB,EAAGiB,KAAK,IAAK;IACvCA,KAAK,CAACb,MAAM,GAAGI,YAAY,CAACJ,MAAM,CAACgB,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACX,IAAI,CAACY,IAAI,KAAKL,KAAK,CAACP,IAAI,CAAC;EACtF,CAAC,CAAC;EACJK,OAAO,CACJC,OAAO,CAACf,gBAAgB,EAAE,CAACgB,KAAK,EAAEC,MAAM,KAAK;IAC5CD,KAAK,CAAChB,gBAAgB,GAAGiB,MAAM,CAACC,OAAO,CAACI,MAAM;IAC9C,QAAOL,MAAM,CAACC,OAAO,CAACI,MAAM;MAC1B,KAAK,SAAS;QACZN,KAAK,CAACb,MAAM,GAAGa,KAAK,CAACb,MAAM,GAAGI,YAAY,CAACJ,MAAM,CAACgB,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACX,IAAI,CAACY,IAAI,KAAKL,KAAK,CAACP,IAAI,CAAC;QACnG;MACF,KAAK,oBAAoB;QACvBO,KAAK,CAACb,MAAM,CAACoB,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKD,CAAC,CAACE,KAAK,GAAGD,CAAC,CAACC,KAAK,CAAC;QAC7C;MACF,KAAK,oBAAoB;QACvBV,KAAK,CAACb,MAAM,CAACoB,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKA,CAAC,CAACC,KAAK,GAAGF,CAAC,CAACE,KAAK,CAAC;QAC7C;MACF,KAAK,iBAAiB;QACpBV,KAAK,CAACb,MAAM,CAACoB,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKA,CAAC,CAACE,MAAM,GAAGH,CAAC,CAACG,MAAM,CAAC;QAC/C;IAAM;EAEZ,CAAC,CAAC;EACJb,OAAO,CACJC,OAAO,CAACd,UAAU,EAAE,CAACe,KAAK,EAAEC,MAAM,KAAK;IACtCD,KAAK,CAACb,MAAM,GAAGc,MAAM,CAACC,OAAO;EAC/B,CAAC,CAAC;EACJJ,OAAO,CACJC,OAAO,CAACb,oBAAoB,EAAE,CAACc,KAAK,EAAEC,MAAM,KAAK;IAChDD,KAAK,CAACL,mBAAmB,GAAGM,MAAM,CAACC,OAAO;EAC5C,CAAC,CAAC;AACN,CAAC,CAAC;AAEF,SAAQL,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}