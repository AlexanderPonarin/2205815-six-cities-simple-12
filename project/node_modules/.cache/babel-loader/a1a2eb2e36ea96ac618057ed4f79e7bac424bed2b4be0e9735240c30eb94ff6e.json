{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { loadOffers, requireAuthorization, setError, setOffersDataLoadingStatus, setPersonalDataUser, redirectToRoute, loadComments, loadNerbyOffers, loadOfferById } from './action';\nimport { AuthorizationStatus, TIMEOUT_SHOW_ERROR, emptyPersonalData } from '../const';\nimport { dropToken, saveToken } from '../services/token';\nimport { store } from '.';\nexport const fetchOfferAction = createAsyncThunk('loadOffers', async (_arg, _ref) => {\n  let {\n    dispatch,\n    extra: api\n  } = _ref;\n  dispatch(setOffersDataLoadingStatus(true));\n  const {\n    data\n  } = await api.get('/hotels');\n  dispatch(setOffersDataLoadingStatus(false));\n  dispatch(loadOffers(data));\n});\nexport const fetchCommentsAction = createAsyncThunk('loadComments', async (id, _ref2) => {\n  let {\n    dispatch,\n    extra: api\n  } = _ref2;\n  const {\n    data\n  } = await api.get(`/comments/${id}`);\n  dispatch(loadComments(data));\n});\nexport const fetchNearbyOffersAction = createAsyncThunk('loadNearbyOffers', async (id, _ref3) => {\n  let {\n    dispatch,\n    extra: api\n  } = _ref3;\n  const {\n    data\n  } = await api.get(`/hotels/${id}/nearby`);\n  dispatch(loadNerbyOffers(data));\n});\nexport const fetchOfferByIdAction = createAsyncThunk('loadOfferById', async (id, _ref4) => {\n  let {\n    dispatch,\n    extra: api\n  } = _ref4;\n  const {\n    data\n  } = await api.get(`/hotels/${id}`);\n  dispatch(loadOfferById(data));\n});\nexport const checkAuthAction = createAsyncThunk('checkAuth', async (_arg, _ref5) => {\n  let {\n    dispatch,\n    extra: api\n  } = _ref5;\n  try {\n    const {\n      data\n    } = await api.get('/login');\n    dispatch(requireAuthorization(AuthorizationStatus.Auth));\n    dispatch(setPersonalDataUser(data));\n  } catch {\n    dispatch(requireAuthorization(AuthorizationStatus.NoAuth));\n  }\n});\nexport const loginAction = createAsyncThunk('user/login', async (_ref6, _ref7) => {\n  let {\n    login: email,\n    password\n  } = _ref6;\n  let {\n    dispatch,\n    extra: api\n  } = _ref7;\n  const {\n    data\n  } = await api.post('/login', {\n    email,\n    password\n  });\n  saveToken(data.token);\n  dispatch(requireAuthorization(AuthorizationStatus.Auth));\n  dispatch(setPersonalDataUser(data));\n  dispatch(redirectToRoute('/'));\n});\nexport const sendCommentAction = createAsyncThunk('comments/sendComment', async (_ref8, _ref9) => {\n  let {\n    comment,\n    rating,\n    id\n  } = _ref8;\n  let {\n    dispatch,\n    extra: api\n  } = _ref9;\n  const {\n    data\n  } = await api.post(`/comment/${id}`, {\n    comment,\n    rating\n  });\n  dispatch(loadComments(data));\n  data ? console.log('data') : console.log('nodata');\n});\nexport const logoutAction = createAsyncThunk('user/logout', async (_arg, _ref10) => {\n  let {\n    dispatch,\n    extra: api\n  } = _ref10;\n  await api.delete('/logout');\n  dropToken();\n  dispatch(requireAuthorization(AuthorizationStatus.NoAuth));\n  dispatch(setPersonalDataUser(emptyPersonalData));\n});\nexport const clearErrorAction = createAsyncThunk('clearError', () => {\n  setTimeout(() => store.dispatch(setError(null)), TIMEOUT_SHOW_ERROR);\n});","map":{"version":3,"names":["createAsyncThunk","loadOffers","requireAuthorization","setError","setOffersDataLoadingStatus","setPersonalDataUser","redirectToRoute","loadComments","loadNerbyOffers","loadOfferById","AuthorizationStatus","TIMEOUT_SHOW_ERROR","emptyPersonalData","dropToken","saveToken","store","fetchOfferAction","_arg","_ref","dispatch","extra","api","data","get","fetchCommentsAction","id","_ref2","fetchNearbyOffersAction","_ref3","fetchOfferByIdAction","_ref4","checkAuthAction","_ref5","Auth","NoAuth","loginAction","_ref6","_ref7","login","email","password","post","token","sendCommentAction","_ref8","_ref9","comment","rating","console","log","logoutAction","_ref10","delete","clearErrorAction","setTimeout"],"sources":["C:/Users/Cody/Documents/GitHub/2205815-six-cities-simple-12/project/src/store/api-actions.ts"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { AxiosInstance } from 'axios';\r\nimport { AppDispatch, State } from '../types/state';\r\nimport { Offer, Offers } from '../types/offers';\r\nimport { loadOffers, requireAuthorization, setError, setOffersDataLoadingStatus, setPersonalDataUser, redirectToRoute, loadComments, loadNerbyOffers, loadOfferById } from './action';\r\nimport { AuthorizationStatus, TIMEOUT_SHOW_ERROR, emptyPersonalData } from '../const';\r\nimport { dropToken, saveToken } from '../services/token';\r\nimport { AuthData } from '../types/auth-data';\r\nimport { store } from '.';\r\nimport { UserPersonalData } from '../types/user-personal-data';\r\nimport { UserComments } from '../types/comments';\r\nimport { Review } from '../types/reviews';\r\n\r\nexport const fetchOfferAction = createAsyncThunk<void, undefined, {\r\n    dispatch: AppDispatch;\r\n    state: State;\r\n    extra: AxiosInstance;\r\n  }>(\r\n    'loadOffers',\r\n    async (_arg, {dispatch, extra: api}) => {\r\n      dispatch(setOffersDataLoadingStatus(true));\r\n      const {data} = await api.get<Offers>('/hotels');\r\n      dispatch(setOffersDataLoadingStatus(false));\r\n      dispatch(loadOffers(data));\r\n    },\r\n  );\r\n\r\nexport const fetchCommentsAction = createAsyncThunk<void, number, {\r\n    dispatch: AppDispatch;\r\n    state: State;\r\n    extra: AxiosInstance;\r\n  }>(\r\n    'loadComments',\r\n    async (id, {dispatch, extra: api}) => {\r\n      const {data} = await api.get<UserComments>(`/comments/${id}`);\r\n      dispatch(loadComments(data));\r\n    },\r\n  );\r\n\r\nexport const fetchNearbyOffersAction = createAsyncThunk<void, number, {\r\n    dispatch: AppDispatch;\r\n    state: State;\r\n    extra: AxiosInstance;\r\n  }>(\r\n    'loadNearbyOffers',\r\n    async (id, {dispatch, extra: api}) => {\r\n      const {data} = await api.get<Offers>(`/hotels/${id}/nearby`);\r\n      dispatch(loadNerbyOffers(data));\r\n    },\r\n  );\r\n\r\nexport const fetchOfferByIdAction = createAsyncThunk<void, number, {\r\n    dispatch: AppDispatch;\r\n    state: State;\r\n    extra: AxiosInstance;\r\n  }>(\r\n    'loadOfferById',\r\n    async (id, {dispatch, extra: api}) => {\r\n      const {data} = await api.get<Offer>(`/hotels/${id}`);\r\n      dispatch(loadOfferById(data));\r\n    },\r\n  );\r\n\r\nexport const checkAuthAction = createAsyncThunk<void, undefined, {\r\n    dispatch: AppDispatch;\r\n    state: State;\r\n    extra: AxiosInstance;\r\n  }>(\r\n    'checkAuth',\r\n    async (_arg, {dispatch, extra: api}) => {\r\n      try {\r\n        const {data} = await api.get<UserPersonalData>('/login');\r\n        dispatch(requireAuthorization(AuthorizationStatus.Auth));\r\n        dispatch(setPersonalDataUser(data));\r\n      } catch {\r\n        dispatch(requireAuthorization(AuthorizationStatus.NoAuth));\r\n      }\r\n    },\r\n  );\r\n\r\nexport const loginAction = createAsyncThunk<void, AuthData, {\r\n    dispatch: AppDispatch;\r\n    state: State;\r\n    extra: AxiosInstance;\r\n  }>(\r\n    'user/login',\r\n    async ({login: email, password}, {dispatch, extra: api}) => {\r\n      const {data} = await api.post<UserPersonalData>('/login', {email, password});\r\n      saveToken(data.token);\r\n      dispatch(requireAuthorization(AuthorizationStatus.Auth));\r\n      dispatch(setPersonalDataUser(data));\r\n      dispatch(redirectToRoute('/'));\r\n    },\r\n  );\r\n\r\nexport const sendCommentAction = createAsyncThunk<void, Review, {\r\n    dispatch: AppDispatch;\r\n    state: State;\r\n    extra: AxiosInstance;\r\n  }>(\r\n    'comments/sendComment',\r\n    async ({comment, rating, id}, {dispatch, extra: api}) => {\r\n      const {data} = await api.post<UserComments>(`/comment/${id}`, {comment, rating});\r\n      dispatch(loadComments(data));\r\n      data ? console.log('data') : console.log('nodata');\r\n    },\r\n  );\r\n\r\nexport const logoutAction = createAsyncThunk<void, undefined, {\r\n    dispatch: AppDispatch;\r\n    state: State;\r\n    extra: AxiosInstance;\r\n  }>(\r\n    'user/logout',\r\n    async (_arg, {dispatch, extra: api}) => {\r\n      await api.delete('/logout');\r\n      dropToken();\r\n      dispatch(requireAuthorization(AuthorizationStatus.NoAuth));\r\n      dispatch(setPersonalDataUser(emptyPersonalData));\r\n    },\r\n  );\r\n\r\nexport const clearErrorAction = createAsyncThunk(\r\n  'clearError',\r\n  () => {\r\n    setTimeout(\r\n      () => store.dispatch(setError(null)),\r\n      TIMEOUT_SHOW_ERROR,\r\n    );\r\n  },\r\n);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}