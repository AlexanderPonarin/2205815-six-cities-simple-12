{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { loadOffers, requireAuthorization, setError, setOffersDataLoadingStatus, setPersonalDataUser, redirectToRoute } from './action';\nimport { AuthorizationStatus, TIMEOUT_SHOW_ERROR, emptyPersonalData } from '../const';\nimport { dropToken, saveToken } from '../services/token';\nimport { store } from '.';\nexport const fetchOfferAction = createAsyncThunk('loadOffers', async (_arg, _ref) => {\n  let {\n    dispatch,\n    extra: api\n  } = _ref;\n  dispatch(setOffersDataLoadingStatus(true));\n  const {\n    data\n  } = await api.get('/hotels');\n  dispatch(setOffersDataLoadingStatus(false));\n  dispatch(loadOffers(data));\n});\nexport const fetchCommentsAction = createAsyncThunk('loadComments', async (id, _ref2) => {\n  let {\n    dispatch,\n    extra: api\n  } = _ref2;\n  const {\n    data\n  } = await api.get('/hotels');\n});\nexport const checkAuthAction = createAsyncThunk('checkAuth', async (_arg, _ref3) => {\n  let {\n    dispatch,\n    extra: api\n  } = _ref3;\n  try {\n    await api.get('/login');\n    dispatch(requireAuthorization(AuthorizationStatus.Auth));\n  } catch {\n    dispatch(requireAuthorization(AuthorizationStatus.NoAuth));\n  }\n});\nexport const loginAction = createAsyncThunk('user/login', async (_ref4, _ref5) => {\n  let {\n    login: email,\n    password\n  } = _ref4;\n  let {\n    dispatch,\n    extra: api\n  } = _ref5;\n  const {\n    data\n  } = await api.post('/login', {\n    email,\n    password\n  });\n  saveToken(data.token);\n  dispatch(requireAuthorization(AuthorizationStatus.Auth));\n  dispatch(setPersonalDataUser(data));\n  dispatch(redirectToRoute('/'));\n});\nexport const logoutAction = createAsyncThunk('user/logout', async (_arg, _ref6) => {\n  let {\n    dispatch,\n    extra: api\n  } = _ref6;\n  await api.delete('/logout');\n  dropToken();\n  dispatch(requireAuthorization(AuthorizationStatus.NoAuth));\n  dispatch(setPersonalDataUser(emptyPersonalData));\n});\nexport const clearErrorAction = createAsyncThunk('clearError', () => {\n  setTimeout(() => store.dispatch(setError(null)), TIMEOUT_SHOW_ERROR);\n});","map":{"version":3,"names":["createAsyncThunk","loadOffers","requireAuthorization","setError","setOffersDataLoadingStatus","setPersonalDataUser","redirectToRoute","AuthorizationStatus","TIMEOUT_SHOW_ERROR","emptyPersonalData","dropToken","saveToken","store","fetchOfferAction","_arg","_ref","dispatch","extra","api","data","get","fetchCommentsAction","id","_ref2","checkAuthAction","_ref3","Auth","NoAuth","loginAction","_ref4","_ref5","login","email","password","post","token","logoutAction","_ref6","delete","clearErrorAction","setTimeout"],"sources":["C:/Users/Cody/Documents/GitHub/2205815-six-cities-simple-12/project/src/store/api-actions.ts"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { AxiosInstance } from 'axios';\r\nimport { AppDispatch, State } from '../types/state';\r\nimport { Offers } from '../types/offers';\r\nimport { loadOffers, requireAuthorization, setError, setOffersDataLoadingStatus, setPersonalDataUser, redirectToRoute } from './action';\r\nimport { AuthorizationStatus, TIMEOUT_SHOW_ERROR, emptyPersonalData } from '../const';\r\nimport { dropToken, saveToken } from '../services/token';\r\nimport { AuthData } from '../types/auth-data';\r\nimport { store } from '.';\r\nimport { UserPersonalData } from '../types/user-personal-data';\r\nimport { UserComments } from '../types/comments';\r\n\r\nexport const fetchOfferAction = createAsyncThunk<void, undefined, {\r\n    dispatch: AppDispatch;\r\n    state: State;\r\n    extra: AxiosInstance;\r\n  }>(\r\n    'loadOffers',\r\n    async (_arg, {dispatch, extra: api}) => {\r\n      dispatch(setOffersDataLoadingStatus(true));\r\n      const {data} = await api.get<Offers>('/hotels');\r\n      dispatch(setOffersDataLoadingStatus(false));\r\n      dispatch(loadOffers(data));\r\n    },\r\n  );\r\n\r\nexport const fetchCommentsAction = createAsyncThunk<void, undefined, {\r\n    dispatch: AppDispatch;\r\n    state: State;\r\n    extra: AxiosInstance;\r\n  }>(\r\n    'loadComments',\r\n    async (id, {dispatch, extra: api}) => {\r\n      const {data} = await api.get<UserComments>('/hotels');\r\n    },\r\n  );\r\n\r\nexport const checkAuthAction = createAsyncThunk<void, undefined, {\r\n    dispatch: AppDispatch;\r\n    state: State;\r\n    extra: AxiosInstance;\r\n  }>(\r\n    'checkAuth',\r\n    async (_arg, {dispatch, extra: api}) => {\r\n      try {\r\n        await api.get('/login');\r\n        dispatch(requireAuthorization(AuthorizationStatus.Auth));\r\n      } catch {\r\n        dispatch(requireAuthorization(AuthorizationStatus.NoAuth));\r\n      }\r\n    },\r\n  );\r\n\r\n\r\nexport const loginAction = createAsyncThunk<void, AuthData, {\r\n    dispatch: AppDispatch;\r\n    state: State;\r\n    extra: AxiosInstance;\r\n  }>(\r\n    'user/login',\r\n    async ({login: email, password}, {dispatch, extra: api}) => {\r\n      const {data} = await api.post<UserPersonalData>('/login', {email, password});\r\n      saveToken(data.token);\r\n      dispatch(requireAuthorization(AuthorizationStatus.Auth));\r\n      dispatch(setPersonalDataUser(data));\r\n      dispatch(redirectToRoute('/'));\r\n    },\r\n  );\r\n\r\nexport const logoutAction = createAsyncThunk<void, undefined, {\r\n    dispatch: AppDispatch;\r\n    state: State;\r\n    extra: AxiosInstance;\r\n  }>(\r\n    'user/logout',\r\n    async (_arg, {dispatch, extra: api}) => {\r\n      await api.delete('/logout');\r\n      dropToken();\r\n      dispatch(requireAuthorization(AuthorizationStatus.NoAuth));\r\n      dispatch(setPersonalDataUser(emptyPersonalData));\r\n    },\r\n  );\r\n\r\nexport const clearErrorAction = createAsyncThunk(\r\n  'clearError',\r\n  () => {\r\n    setTimeout(\r\n      () => store.dispatch(setError(null)),\r\n      TIMEOUT_SHOW_ERROR,\r\n    );\r\n  },\r\n);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}