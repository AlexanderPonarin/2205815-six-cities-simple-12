{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cody\\\\Documents\\\\GitHub\\\\2205815-six-cities-simple-12\\\\project\\\\src\\\\components\\\\map\\\\map.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport leaflet, { LayerGroup } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport useMap from '../../hooks/use-map/use-map';\nimport { URL_MARKER_DEFAULT, URL_MARKER_CURRENT } from '../consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map(_ref) {\n  _s();\n  let {\n    city,\n    offers,\n    activeOfferId,\n    isPropertyScreenMap\n  } = _ref;\n  const offer = city;\n  const mapRef = useRef(null);\n  const map = useMap({\n    mapRef,\n    offer\n  });\n  const [cityCenter, setCityCenter] = useState(offer.city.name);\n  useEffect(() => {\n    if (map) {\n      if (offer.city.name !== cityCenter) {\n        map.flyTo([offer.city.location.latitude, offer.city.location.longitude], offer.city.location.zoom, {\n          animate: true,\n          duration: 1\n        });\n        setCityCenter(offer.city.name);\n      }\n      const markers = offers.map(of => {\n        if (of.id === activeOfferId) {\n          leaflet.marker({\n            lat: of.location.latitude,\n            lng: of.location.longitude\n          }, {\n            icon: currentCustomIcon\n          }).addTo(map);\n        } else {\n          leaflet.marker({\n            lat: of.location.latitude,\n            lng: of.location.longitude\n          }, {\n            icon: defaultCustomIcon\n          }).addTo(map);\n        }\n      });\n      const markerLayer = new LayerGroup(markers);\n      markerLayer.addTo(map);\n      return () => {\n        map.removeLayer(markerLayer);\n      };\n    }\n  }, []);\n  const defaultCustomIcon = leaflet.icon({\n    iconUrl: URL_MARKER_DEFAULT,\n    iconSize: [40, 40],\n    iconAnchor: [20, 40]\n  });\n  const currentCustomIcon = leaflet.icon({\n    iconUrl: URL_MARKER_CURRENT,\n    iconSize: [40, 40],\n    iconAnchor: [20, 40]\n  });\n\n  /*\n  useEffect(() => {\n    if (map) {\n      offers.forEach((of) => {\n        if (of.id === activeOfferId) {\n          leaflet\n            .marker({\n              lat: of.location.latitude,\n              lng: of.location.longitude,\n            }, {\n              icon: currentCustomIcon,\n            })\n            .addTo(map);\n        } else {\n          leaflet\n            .marker({\n              lat: of.location.latitude,\n              lng: of.location.longitude,\n            }, {\n              icon: defaultCustomIcon,\n            })\n            .addTo(map);\n        }});\n    }\n  }, [map, offers, activeOfferId, currentCustomIcon, defaultCustomIcon]);\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    ref: mapRef,\n    className: isPropertyScreenMap ? 'property__map map' : 'cities__map map'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"lLDWq2M1cy9qExzerEVdVZ0Jv1M=\", false, function () {\n  return [useMap];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useRef","useEffect","useState","leaflet","LayerGroup","useMap","URL_MARKER_DEFAULT","URL_MARKER_CURRENT","jsxDEV","_jsxDEV","Map","_ref","_s","city","offers","activeOfferId","isPropertyScreenMap","offer","mapRef","map","cityCenter","setCityCenter","name","flyTo","location","latitude","longitude","zoom","animate","duration","markers","of","id","marker","lat","lng","icon","currentCustomIcon","addTo","defaultCustomIcon","markerLayer","removeLayer","iconUrl","iconSize","iconAnchor","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Cody/Documents/GitHub/2205815-six-cities-simple-12/project/src/components/map/map.tsx"],"sourcesContent":["import React, {useRef, useEffect, useState} from 'react';\nimport leaflet, { LayerGroup } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport useMap from '../../hooks/use-map/use-map';\nimport { URL_MARKER_DEFAULT, URL_MARKER_CURRENT } from '../consts';\n\nimport { Offer, Offers } from '../../types/offers';\n\ntype MapProps = {\n    offers: Offers;\n    city: Offer;\n    activeOfferId: number;\n    isPropertyScreenMap?: boolean;\n}\n\nfunction Map({city, offers, activeOfferId, isPropertyScreenMap}: MapProps): JSX.Element {\n  const offer = city;\n  const mapRef = useRef(null);\n  const map = useMap({mapRef, offer});\n\n  const [cityCenter, setCityCenter] = useState(offer.city.name);\n\n  useEffect(() => {\n    if (map) {\n      if (offer.city.name !== cityCenter) {\n        map.flyTo(\n          [\n            offer.city.location.latitude,\n            offer.city.location.longitude\n          ],\n          offer.city.location.zoom,\n          {\n            animate: true,\n            duration: 1,\n          }\n        );\n\n        setCityCenter(offer.city.name);\n      }\n\n      const markers = offers.map((of) => {\n        if (of.id === activeOfferId) {\n          leaflet\n            .marker({\n              lat: of.location.latitude,\n              lng: of.location.longitude,\n            }, {\n              icon: currentCustomIcon,\n            })\n            .addTo(map);\n        } else {\n          leaflet\n            .marker({\n              lat: of.location.latitude,\n              lng: of.location.longitude,\n            }, {\n              icon: defaultCustomIcon,\n            })\n            .addTo(map);\n        }\n      }\n      );\n\n      const markerLayer = new LayerGroup(markers);\n      markerLayer.addTo(map);\n\n      return () => {\n        map.removeLayer(markerLayer);\n      };\n    }\n  }, []);\n\n  const defaultCustomIcon = leaflet.icon({\n    iconUrl: URL_MARKER_DEFAULT,\n    iconSize: [40, 40],\n    iconAnchor: [20, 40],\n  });\n\n  const currentCustomIcon = leaflet.icon({\n    iconUrl: URL_MARKER_CURRENT,\n    iconSize: [40, 40],\n    iconAnchor: [20, 40],\n  });\n\n\n  /*\n  useEffect(() => {\n    if (map) {\n      offers.forEach((of) => {\n        if (of.id === activeOfferId) {\n          leaflet\n            .marker({\n              lat: of.location.latitude,\n              lng: of.location.longitude,\n            }, {\n              icon: currentCustomIcon,\n            })\n            .addTo(map);\n        } else {\n          leaflet\n            .marker({\n              lat: of.location.latitude,\n              lng: of.location.longitude,\n            }, {\n              icon: defaultCustomIcon,\n            })\n            .addTo(map);\n        }});\n    }\n  }, [map, offers, activeOfferId, currentCustomIcon, defaultCustomIcon]);\n*/\n\n  return (\n    <section\n      ref={mapRef}\n      className={isPropertyScreenMap ?\n        'property__map map'\n        :\n        'cities__map map'}\n    >\n    </section>\n  );\n}\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}